"use strict";

exports.__esModule = true;
exports.default = undefined;

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var FuseBox = function (_React$Component) {
  _inherits(FuseBox, _React$Component);

  function FuseBox(props) {
    _classCallCheck(this, FuseBox);

    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

    _this.state = {
      isOpen: false
    };

    _this.keyEvent = function (event) {
      if (!_this.props.isKeyPressed(event)) {
        return;
      }

      event.preventDefault();
      _this.setState({ isOpen: !_this.state.isOpen });
    };
    return _this;
  }

  FuseBox.prototype.componentDidMount = function componentDidMount() {
    document.body.addEventListener("keydown", this.keyEvent);
  };

  FuseBox.prototype.componentWillUnmount = function componentWillUnmount() {
    document.body.removeEventListener("keydown", this.keyEvent);
  };

  FuseBox.prototype._onClose = function _onClose() {
    this.setState({ isOpen: false });
  };

  FuseBox.prototype.render = function render() {
    return _react2.default.createElement(
      "div",
      { className: "" + (this.state.isOpen && 'FuseBackground') },
      this.props.popup(this.state.isOpen, this._onClose.bind(this))
    );
  };

  return FuseBox;
}(_react2.default.Component);

exports.default = FuseBox;


FuseBox.defaultProps = {
  isKeyPressed: function isKeyPressed() {
    return false;
  },
  popup: function popup() {
    return null;
  }
};
module.exports = exports["default"];